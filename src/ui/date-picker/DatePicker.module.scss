@use "../../helper/style/mixin";

.component {
  position: relative;
}

.toggle {
  width: 100%;
}

.wrapper {
  position: relative;

  transition-timing-function: linear;
  transition-duration: 250ms;
  transition-property: height;
}

.dropdown {
  position: absolute;
  top: calc(var(--spacing-unit) * 0.5);
  z-index: 20;

  display: grid;
  width: calc(var(--dropdown-width));

  opacity: 0;

  transition-timing-function: linear;
  transition-duration: 250ms;
  transition-property: all;

  pointer-events: none;
  visibility: hidden;
}

.left {
  left: 0;
}

.right {
  right: 0;
}

.visible {
  opacity: 1;

  pointer-events: all;
  visibility: visible;
}

.header {
  position: relative;

  display: grid;
  grid-auto-flow: column;
  align-items: center;
  grid-column-gap: var(--spacing-unit);

  padding-bottom: calc(var(--spacing-unit) * 2);
}

.header::before {
  position: absolute;
  bottom: 0;
  left: calc(var(--spacing-unit) * -2);
  right: calc(var(--spacing-unit) * -2);
  content: "";

  display: block;
  height: 1px;

  background-color: rgba(var(--primary-black), 0.1);
}

.control {
  min-height: 2.5rem;

  font-family: var(--primary-font);
  font-weight: var(--regular);
  font-size: var(--body-1);
  color: rgba(var(--primary-black), 1);

  border: 0;
  border-radius: 0.75rem;

  background-color: #ececec;

  cursor: pointer;

  transition-timing-function: linear;
  transition-duration: 250ms;
  transition-property: background-color, color;

  &:not(:disabled):hover,
  &:not(:disabled):focus {
    color: rgba(var(--primary-white), 1);

    background-color: rgba(var(--primary-black), 1);
  }

  &:disabled {
    opacity: 0.2;
    cursor: not-allowed;
  }
}

.calendar {
  padding: calc(var(--spacing-unit) * 2);

  box-sizing: border-box;

  border: 1px solid rgba(var(--primary-black), 0.1);
  border-radius: 0.5rem;

  background-color: rgba(var(--primary-white), 1);
}

.time {
  position: relative;

  display: grid;
  grid-auto-flow: column;
  grid-template-columns: 1fr auto auto auto auto;
  align-items: center;
  grid-column-gap: var(--spacing-unit);

  padding-top: calc(var(--spacing-unit) * 2);
}

.time::before {
  position: absolute;
  top: 0;
  left: calc(var(--spacing-unit) * -2);
  right: calc(var(--spacing-unit) * -2);
  content: "";

  display: block;
  height: 1px;

  background-color: rgba(var(--primary-black), 0.1);
}

.close {
  min-height: 2.5rem;
  padding: 0 1.25rem;

  border-radius: 0.75rem;
}
